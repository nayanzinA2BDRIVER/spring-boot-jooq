/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.quartz.tables;


import com.nayanzin.springbootjooq.db.quartz.Keys;
import com.nayanzin.springbootjooq.db.quartz.Quartz;
import com.nayanzin.springbootjooq.db.quartz.tables.records.QrtzFiredTriggersRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzFiredTriggers extends TableImpl<QrtzFiredTriggersRecord> {

    private static final long serialVersionUID = 1168767493;

    /**
     * The reference instance of <code>quartz.qrtz_fired_triggers</code>
     */
    public static final QrtzFiredTriggers QRTZ_FIRED_TRIGGERS = new QrtzFiredTriggers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QrtzFiredTriggersRecord> getRecordType() {
        return QrtzFiredTriggersRecord.class;
    }

    /**
     * The column <code>quartz.qrtz_fired_triggers.sched_name</code>.
     */
    public final TableField<QrtzFiredTriggersRecord, String> SCHED_NAME = createField("sched_name", org.jooq.impl.SQLDataType.VARCHAR.length(120).nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_fired_triggers.entry_id</code>.
     */
    public final TableField<QrtzFiredTriggersRecord, String> ENTRY_ID = createField("entry_id", org.jooq.impl.SQLDataType.VARCHAR.length(95).nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_fired_triggers.trigger_name</code>.
     */
    public final TableField<QrtzFiredTriggersRecord, String> TRIGGER_NAME = createField("trigger_name", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_fired_triggers.trigger_group</code>.
     */
    public final TableField<QrtzFiredTriggersRecord, String> TRIGGER_GROUP = createField("trigger_group", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_fired_triggers.instance_name</code>.
     */
    public final TableField<QrtzFiredTriggersRecord, String> INSTANCE_NAME = createField("instance_name", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_fired_triggers.fired_time</code>.
     */
    public final TableField<QrtzFiredTriggersRecord, Long> FIRED_TIME = createField("fired_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_fired_triggers.sched_time</code>.
     */
    public final TableField<QrtzFiredTriggersRecord, Long> SCHED_TIME = createField("sched_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_fired_triggers.priority</code>.
     */
    public final TableField<QrtzFiredTriggersRecord, Integer> PRIORITY = createField("priority", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_fired_triggers.state</code>.
     */
    public final TableField<QrtzFiredTriggersRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_fired_triggers.job_name</code>.
     */
    public final TableField<QrtzFiredTriggersRecord, String> JOB_NAME = createField("job_name", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>quartz.qrtz_fired_triggers.job_group</code>.
     */
    public final TableField<QrtzFiredTriggersRecord, String> JOB_GROUP = createField("job_group", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>quartz.qrtz_fired_triggers.is_nonconcurrent</code>.
     */
    public final TableField<QrtzFiredTriggersRecord, Boolean> IS_NONCONCURRENT = createField("is_nonconcurrent", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>quartz.qrtz_fired_triggers.requests_recovery</code>.
     */
    public final TableField<QrtzFiredTriggersRecord, Boolean> REQUESTS_RECOVERY = createField("requests_recovery", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * Create a <code>quartz.qrtz_fired_triggers</code> table reference
     */
    public QrtzFiredTriggers() {
        this("qrtz_fired_triggers", null);
    }

    /**
     * Create an aliased <code>quartz.qrtz_fired_triggers</code> table reference
     */
    public QrtzFiredTriggers(String alias) {
        this(alias, QRTZ_FIRED_TRIGGERS);
    }

    private QrtzFiredTriggers(String alias, Table<QrtzFiredTriggersRecord> aliased) {
        this(alias, aliased, null);
    }

    private QrtzFiredTriggers(String alias, Table<QrtzFiredTriggersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Quartz.QUARTZ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QrtzFiredTriggersRecord> getPrimaryKey() {
        return Keys.QRTZ_FIRED_TRIGGERS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QrtzFiredTriggersRecord>> getKeys() {
        return Arrays.<UniqueKey<QrtzFiredTriggersRecord>>asList(Keys.QRTZ_FIRED_TRIGGERS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QrtzFiredTriggers as(String alias) {
        return new QrtzFiredTriggers(alias, this);
    }

    /**
     * Rename this table
     */
    public QrtzFiredTriggers rename(String name) {
        return new QrtzFiredTriggers(name, null);
    }
}
