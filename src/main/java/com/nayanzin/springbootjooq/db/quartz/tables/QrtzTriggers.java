/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.quartz.tables;


import com.nayanzin.springbootjooq.db.quartz.Keys;
import com.nayanzin.springbootjooq.db.quartz.Quartz;
import com.nayanzin.springbootjooq.db.quartz.tables.records.QrtzTriggersRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzTriggers extends TableImpl<QrtzTriggersRecord> {

    private static final long serialVersionUID = -1591741781;

    /**
     * The reference instance of <code>quartz.qrtz_triggers</code>
     */
    public static final QrtzTriggers QRTZ_TRIGGERS = new QrtzTriggers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QrtzTriggersRecord> getRecordType() {
        return QrtzTriggersRecord.class;
    }

    /**
     * The column <code>quartz.qrtz_triggers.sched_name</code>.
     */
    public final TableField<QrtzTriggersRecord, String> SCHED_NAME = createField("sched_name", org.jooq.impl.SQLDataType.VARCHAR.length(120).nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_triggers.trigger_name</code>.
     */
    public final TableField<QrtzTriggersRecord, String> TRIGGER_NAME = createField("trigger_name", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_triggers.trigger_group</code>.
     */
    public final TableField<QrtzTriggersRecord, String> TRIGGER_GROUP = createField("trigger_group", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_triggers.job_name</code>.
     */
    public final TableField<QrtzTriggersRecord, String> JOB_NAME = createField("job_name", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_triggers.job_group</code>.
     */
    public final TableField<QrtzTriggersRecord, String> JOB_GROUP = createField("job_group", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_triggers.description</code>.
     */
    public final TableField<QrtzTriggersRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(250), this, "");

    /**
     * The column <code>quartz.qrtz_triggers.next_fire_time</code>.
     */
    public final TableField<QrtzTriggersRecord, Long> NEXT_FIRE_TIME = createField("next_fire_time", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>quartz.qrtz_triggers.prev_fire_time</code>.
     */
    public final TableField<QrtzTriggersRecord, Long> PREV_FIRE_TIME = createField("prev_fire_time", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>quartz.qrtz_triggers.priority</code>.
     */
    public final TableField<QrtzTriggersRecord, Integer> PRIORITY = createField("priority", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>quartz.qrtz_triggers.trigger_state</code>.
     */
    public final TableField<QrtzTriggersRecord, String> TRIGGER_STATE = createField("trigger_state", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_triggers.trigger_type</code>.
     */
    public final TableField<QrtzTriggersRecord, String> TRIGGER_TYPE = createField("trigger_type", org.jooq.impl.SQLDataType.VARCHAR.length(8).nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_triggers.start_time</code>.
     */
    public final TableField<QrtzTriggersRecord, Long> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_triggers.end_time</code>.
     */
    public final TableField<QrtzTriggersRecord, Long> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>quartz.qrtz_triggers.calendar_name</code>.
     */
    public final TableField<QrtzTriggersRecord, String> CALENDAR_NAME = createField("calendar_name", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>quartz.qrtz_triggers.misfire_instr</code>.
     */
    public final TableField<QrtzTriggersRecord, Short> MISFIRE_INSTR = createField("misfire_instr", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>quartz.qrtz_triggers.job_data</code>.
     */
    public final TableField<QrtzTriggersRecord, byte[]> JOB_DATA = createField("job_data", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * Create a <code>quartz.qrtz_triggers</code> table reference
     */
    public QrtzTriggers() {
        this("qrtz_triggers", null);
    }

    /**
     * Create an aliased <code>quartz.qrtz_triggers</code> table reference
     */
    public QrtzTriggers(String alias) {
        this(alias, QRTZ_TRIGGERS);
    }

    private QrtzTriggers(String alias, Table<QrtzTriggersRecord> aliased) {
        this(alias, aliased, null);
    }

    private QrtzTriggers(String alias, Table<QrtzTriggersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Quartz.QUARTZ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QrtzTriggersRecord> getPrimaryKey() {
        return Keys.QRTZ_TRIGGERS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QrtzTriggersRecord>> getKeys() {
        return Arrays.<UniqueKey<QrtzTriggersRecord>>asList(Keys.QRTZ_TRIGGERS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<QrtzTriggersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QrtzTriggersRecord, ?>>asList(Keys.QRTZ_TRIGGERS__QRTZ_TRIGGERS_SCHED_NAME_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QrtzTriggers as(String alias) {
        return new QrtzTriggers(alias, this);
    }

    /**
     * Rename this table
     */
    public QrtzTriggers rename(String name) {
        return new QrtzTriggers(name, null);
    }
}
