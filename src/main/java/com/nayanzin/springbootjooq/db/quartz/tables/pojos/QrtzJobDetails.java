/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.quartz.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzJobDetails implements Serializable {

    private static final long serialVersionUID = -1599712946;

    private String  schedName;
    private String  jobName;
    private String  jobGroup;
    private String  description;
    private String  jobClassName;
    private Boolean isDurable;
    private Boolean isNonconcurrent;
    private Boolean isUpdateData;
    private Boolean requestsRecovery;
    private byte[]  jobData;

    public QrtzJobDetails() {}

    public QrtzJobDetails(QrtzJobDetails value) {
        this.schedName = value.schedName;
        this.jobName = value.jobName;
        this.jobGroup = value.jobGroup;
        this.description = value.description;
        this.jobClassName = value.jobClassName;
        this.isDurable = value.isDurable;
        this.isNonconcurrent = value.isNonconcurrent;
        this.isUpdateData = value.isUpdateData;
        this.requestsRecovery = value.requestsRecovery;
        this.jobData = value.jobData;
    }

    public QrtzJobDetails(
        String  schedName,
        String  jobName,
        String  jobGroup,
        String  description,
        String  jobClassName,
        Boolean isDurable,
        Boolean isNonconcurrent,
        Boolean isUpdateData,
        Boolean requestsRecovery,
        byte[]  jobData
    ) {
        this.schedName = schedName;
        this.jobName = jobName;
        this.jobGroup = jobGroup;
        this.description = description;
        this.jobClassName = jobClassName;
        this.isDurable = isDurable;
        this.isNonconcurrent = isNonconcurrent;
        this.isUpdateData = isUpdateData;
        this.requestsRecovery = requestsRecovery;
        this.jobData = jobData;
    }

    public String getSchedName() {
        return this.schedName;
    }

    public void setSchedName(String schedName) {
        this.schedName = schedName;
    }

    public String getJobName() {
        return this.jobName;
    }

    public void setJobName(String jobName) {
        this.jobName = jobName;
    }

    public String getJobGroup() {
        return this.jobGroup;
    }

    public void setJobGroup(String jobGroup) {
        this.jobGroup = jobGroup;
    }

    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getJobClassName() {
        return this.jobClassName;
    }

    public void setJobClassName(String jobClassName) {
        this.jobClassName = jobClassName;
    }

    public Boolean getIsDurable() {
        return this.isDurable;
    }

    public void setIsDurable(Boolean isDurable) {
        this.isDurable = isDurable;
    }

    public Boolean getIsNonconcurrent() {
        return this.isNonconcurrent;
    }

    public void setIsNonconcurrent(Boolean isNonconcurrent) {
        this.isNonconcurrent = isNonconcurrent;
    }

    public Boolean getIsUpdateData() {
        return this.isUpdateData;
    }

    public void setIsUpdateData(Boolean isUpdateData) {
        this.isUpdateData = isUpdateData;
    }

    public Boolean getRequestsRecovery() {
        return this.requestsRecovery;
    }

    public void setRequestsRecovery(Boolean requestsRecovery) {
        this.requestsRecovery = requestsRecovery;
    }

    public byte[] getJobData() {
        return this.jobData;
    }

    public void setJobData(byte[] jobData) {
        this.jobData = jobData;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("QrtzJobDetails (");

        sb.append(schedName);
        sb.append(", ").append(jobName);
        sb.append(", ").append(jobGroup);
        sb.append(", ").append(description);
        sb.append(", ").append(jobClassName);
        sb.append(", ").append(isDurable);
        sb.append(", ").append(isNonconcurrent);
        sb.append(", ").append(isUpdateData);
        sb.append(", ").append(requestsRecovery);
        sb.append(", ").append("[binary...]");

        sb.append(")");
        return sb.toString();
    }
}
