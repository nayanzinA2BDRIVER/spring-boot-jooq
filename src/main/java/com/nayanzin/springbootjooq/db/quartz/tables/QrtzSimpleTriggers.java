/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.quartz.tables;


import com.nayanzin.springbootjooq.db.quartz.Keys;
import com.nayanzin.springbootjooq.db.quartz.Quartz;
import com.nayanzin.springbootjooq.db.quartz.tables.records.QrtzSimpleTriggersRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QrtzSimpleTriggers extends TableImpl<QrtzSimpleTriggersRecord> {

    private static final long serialVersionUID = -1127473333;

    /**
     * The reference instance of <code>quartz.qrtz_simple_triggers</code>
     */
    public static final QrtzSimpleTriggers QRTZ_SIMPLE_TRIGGERS = new QrtzSimpleTriggers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QrtzSimpleTriggersRecord> getRecordType() {
        return QrtzSimpleTriggersRecord.class;
    }

    /**
     * The column <code>quartz.qrtz_simple_triggers.sched_name</code>.
     */
    public final TableField<QrtzSimpleTriggersRecord, String> SCHED_NAME = createField("sched_name", org.jooq.impl.SQLDataType.VARCHAR.length(120).nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_simple_triggers.trigger_name</code>.
     */
    public final TableField<QrtzSimpleTriggersRecord, String> TRIGGER_NAME = createField("trigger_name", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_simple_triggers.trigger_group</code>.
     */
    public final TableField<QrtzSimpleTriggersRecord, String> TRIGGER_GROUP = createField("trigger_group", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_simple_triggers.repeat_count</code>.
     */
    public final TableField<QrtzSimpleTriggersRecord, Long> REPEAT_COUNT = createField("repeat_count", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_simple_triggers.repeat_interval</code>.
     */
    public final TableField<QrtzSimpleTriggersRecord, Long> REPEAT_INTERVAL = createField("repeat_interval", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>quartz.qrtz_simple_triggers.times_triggered</code>.
     */
    public final TableField<QrtzSimpleTriggersRecord, Long> TIMES_TRIGGERED = createField("times_triggered", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>quartz.qrtz_simple_triggers</code> table reference
     */
    public QrtzSimpleTriggers() {
        this("qrtz_simple_triggers", null);
    }

    /**
     * Create an aliased <code>quartz.qrtz_simple_triggers</code> table reference
     */
    public QrtzSimpleTriggers(String alias) {
        this(alias, QRTZ_SIMPLE_TRIGGERS);
    }

    private QrtzSimpleTriggers(String alias, Table<QrtzSimpleTriggersRecord> aliased) {
        this(alias, aliased, null);
    }

    private QrtzSimpleTriggers(String alias, Table<QrtzSimpleTriggersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Quartz.QUARTZ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QrtzSimpleTriggersRecord> getPrimaryKey() {
        return Keys.QRTZ_SIMPLE_TRIGGERS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QrtzSimpleTriggersRecord>> getKeys() {
        return Arrays.<UniqueKey<QrtzSimpleTriggersRecord>>asList(Keys.QRTZ_SIMPLE_TRIGGERS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<QrtzSimpleTriggersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QrtzSimpleTriggersRecord, ?>>asList(Keys.QRTZ_SIMPLE_TRIGGERS__QRTZ_SIMPLE_TRIGGERS_SCHED_NAME_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QrtzSimpleTriggers as(String alias) {
        return new QrtzSimpleTriggers(alias, this);
    }

    /**
     * Rename this table
     */
    public QrtzSimpleTriggers rename(String name) {
        return new QrtzSimpleTriggers(name, null);
    }
}
