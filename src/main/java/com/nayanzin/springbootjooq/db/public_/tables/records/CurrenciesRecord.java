/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.public_.tables.records;


import com.nayanzin.springbootjooq.db.public_.tables.Currencies;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CurrenciesRecord extends UpdatableRecordImpl<CurrenciesRecord> implements Record4<String, String, Long, Boolean> {

    private static final long serialVersionUID = 1447521269;

    /**
     * Setter for <code>public.currencies.code</code>.
     */
    public void setCode(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.currencies.code</code>.
     */
    public String getCode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.currencies.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.currencies.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.currencies.translation_id</code>.
     */
    public void setTranslationId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.currencies.translation_id</code>.
     */
    public Long getTranslationId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.currencies.in_use</code>.
     */
    public void setInUse(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.currencies.in_use</code>.
     */
    public Boolean getInUse() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, Long, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, Long, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Currencies.CURRENCIES.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Currencies.CURRENCIES.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Currencies.CURRENCIES.TRANSLATION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field4() {
        return Currencies.CURRENCIES.IN_USE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getTranslationId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value4() {
        return getInUse();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrenciesRecord value1(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrenciesRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrenciesRecord value3(Long value) {
        setTranslationId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrenciesRecord value4(Boolean value) {
        setInUse(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrenciesRecord values(String value1, String value2, Long value3, Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CurrenciesRecord
     */
    public CurrenciesRecord() {
        super(Currencies.CURRENCIES);
    }

    /**
     * Create a detached, initialised CurrenciesRecord
     */
    public CurrenciesRecord(String code, String name, Long translationId, Boolean inUse) {
        super(Currencies.CURRENCIES);

        set(0, code);
        set(1, name);
        set(2, translationId);
        set(3, inUse);
    }
}
