/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.public_.tables.records;


import com.nayanzin.springbootjooq.db.public_.tables.BillingCounters;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BillingCountersRecord extends UpdatableRecordImpl<BillingCountersRecord> implements Record5<Long, Long, Integer, String, Timestamp> {

    private static final long serialVersionUID = -1105563787;

    /**
     * Setter for <code>public.billing_counters.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.billing_counters.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.billing_counters.org_id</code>.
     */
    public void setOrgId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.billing_counters.org_id</code>.
     */
    public Long getOrgId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.billing_counters.counter</code>.
     */
    public void setCounter(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.billing_counters.counter</code>.
     */
    public Integer getCounter() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.billing_counters.type</code>.
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.billing_counters.type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.billing_counters.timestamp</code>.
     */
    public void setTimestamp(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.billing_counters.timestamp</code>.
     */
    public Timestamp getTimestamp() {
        return (Timestamp) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, Long, Integer, String, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, Long, Integer, String, Timestamp> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return BillingCounters.BILLING_COUNTERS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return BillingCounters.BILLING_COUNTERS.ORG_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return BillingCounters.BILLING_COUNTERS.COUNTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return BillingCounters.BILLING_COUNTERS.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return BillingCounters.BILLING_COUNTERS.TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getOrgId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCounter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BillingCountersRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BillingCountersRecord value2(Long value) {
        setOrgId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BillingCountersRecord value3(Integer value) {
        setCounter(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BillingCountersRecord value4(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BillingCountersRecord value5(Timestamp value) {
        setTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BillingCountersRecord values(Long value1, Long value2, Integer value3, String value4, Timestamp value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BillingCountersRecord
     */
    public BillingCountersRecord() {
        super(BillingCounters.BILLING_COUNTERS);
    }

    /**
     * Create a detached, initialised BillingCountersRecord
     */
    public BillingCountersRecord(Long id, Long orgId, Integer counter, String type, Timestamp timestamp) {
        super(BillingCounters.BILLING_COUNTERS);

        set(0, id);
        set(1, orgId);
        set(2, counter);
        set(3, type);
        set(4, timestamp);
    }
}
