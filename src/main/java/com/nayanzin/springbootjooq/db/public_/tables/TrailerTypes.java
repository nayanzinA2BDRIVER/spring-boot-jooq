/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.public_.tables;


import com.nayanzin.springbootjooq.db.public_.Keys;
import com.nayanzin.springbootjooq.db.public_.Public;
import com.nayanzin.springbootjooq.db.public_.enums.TrailerTypeGroup;
import com.nayanzin.springbootjooq.db.public_.tables.records.TrailerTypesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrailerTypes extends TableImpl<TrailerTypesRecord> {

    private static final long serialVersionUID = -487417316;

    /**
     * The reference instance of <code>public.trailer_types</code>
     */
    public static final TrailerTypes TRAILER_TYPES = new TrailerTypes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TrailerTypesRecord> getRecordType() {
        return TrailerTypesRecord.class;
    }

    /**
     * The column <code>public.trailer_types.id</code>.
     */
    public final TableField<TrailerTypesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('trailer_types_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.trailer_types.translation_id</code>.
     */
    public final TableField<TrailerTypesRecord, Integer> TRANSLATION_ID = createField("translation_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.trailer_types.created_date</code>.
     */
    public final TableField<TrailerTypesRecord, Timestamp> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>public.trailer_types.modified_date</code>.
     */
    public final TableField<TrailerTypesRecord, Timestamp> MODIFIED_DATE = createField("modified_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.trailer_types.created_user</code>.
     */
    public final TableField<TrailerTypesRecord, String> CREATED_USER = createField("created_user", org.jooq.impl.SQLDataType.VARCHAR.length(64).defaultValue(org.jooq.impl.DSL.field("\"current_user\"()", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.trailer_types.modified_user</code>.
     */
    public final TableField<TrailerTypesRecord, String> MODIFIED_USER = createField("modified_user", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * The column <code>public.trailer_types.type_group</code>.
     */
    public final TableField<TrailerTypesRecord, TrailerTypeGroup> TYPE_GROUP = createField("type_group", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(com.nayanzin.springbootjooq.db.public_.enums.TrailerTypeGroup.class), this, "");

    /**
     * The column <code>public.trailer_types.type_group_translation_id</code>.
     */
    public final TableField<TrailerTypesRecord, Long> TYPE_GROUP_TRANSLATION_ID = createField("type_group_translation_id", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("1044", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>public.trailer_types</code> table reference
     */
    public TrailerTypes() {
        this("trailer_types", null);
    }

    /**
     * Create an aliased <code>public.trailer_types</code> table reference
     */
    public TrailerTypes(String alias) {
        this(alias, TRAILER_TYPES);
    }

    private TrailerTypes(String alias, Table<TrailerTypesRecord> aliased) {
        this(alias, aliased, null);
    }

    private TrailerTypes(String alias, Table<TrailerTypesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TrailerTypesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TRAILER_TYPES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TrailerTypesRecord> getPrimaryKey() {
        return Keys.TRAILER_TYPES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TrailerTypesRecord>> getKeys() {
        return Arrays.<UniqueKey<TrailerTypesRecord>>asList(Keys.TRAILER_TYPES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TrailerTypesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TrailerTypesRecord, ?>>asList(Keys.TRAILER_TYPES__FK_COUNTRIES_TRANSLATIONS, Keys.TRAILER_TYPES__TYPE_GROUP_TRANSLATION_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TrailerTypes as(String alias) {
        return new TrailerTypes(alias, this);
    }

    /**
     * Rename this table
     */
    public TrailerTypes rename(String name) {
        return new TrailerTypes(name, null);
    }
}
