/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.public_.tables;


import com.nayanzin.springbootjooq.db.public_.Keys;
import com.nayanzin.springbootjooq.db.public_.Public;
import com.nayanzin.springbootjooq.db.public_.enums.OrgType;
import com.nayanzin.springbootjooq.db.public_.tables.records.UserDefSettingsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDefSettings extends TableImpl<UserDefSettingsRecord> {

    private static final long serialVersionUID = 1784583372;

    /**
     * The reference instance of <code>public.user_def_settings</code>
     */
    public static final UserDefSettings USER_DEF_SETTINGS = new UserDefSettings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserDefSettingsRecord> getRecordType() {
        return UserDefSettingsRecord.class;
    }

    /**
     * The column <code>public.user_def_settings.id</code>.
     */
    public final TableField<UserDefSettingsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.user_def_settings.role_id</code>.
     */
    public final TableField<UserDefSettingsRecord, Long> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.user_def_settings.org_type</code>.
     */
    public final TableField<UserDefSettingsRecord, OrgType> ORG_TYPE = createField("org_type", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(com.nayanzin.springbootjooq.db.public_.enums.OrgType.class), this, "");

    /**
     * The column <code>public.user_def_settings.data</code>.
     */
    public final TableField<UserDefSettingsRecord, Object> DATA = createField("data", org.jooq.impl.DefaultDataType.getDefaultDataType("jsonb"), this, "");

    /**
     * The column <code>public.user_def_settings.created_date</code>.
     */
    public final TableField<UserDefSettingsRecord, Timestamp> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>public.user_def_settings.modified_date</code>.
     */
    public final TableField<UserDefSettingsRecord, Timestamp> MODIFIED_DATE = createField("modified_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.user_def_settings.created_user</code>.
     */
    public final TableField<UserDefSettingsRecord, Long> CREATED_USER = createField("created_user", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.user_def_settings.modified_user</code>.
     */
    public final TableField<UserDefSettingsRecord, Long> MODIFIED_USER = createField("modified_user", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.user_def_settings</code> table reference
     */
    public UserDefSettings() {
        this("user_def_settings", null);
    }

    /**
     * Create an aliased <code>public.user_def_settings</code> table reference
     */
    public UserDefSettings(String alias) {
        this(alias, USER_DEF_SETTINGS);
    }

    private UserDefSettings(String alias, Table<UserDefSettingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserDefSettings(String alias, Table<UserDefSettingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserDefSettingsRecord> getPrimaryKey() {
        return Keys.ROLE_SETTINGS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserDefSettingsRecord>> getKeys() {
        return Arrays.<UniqueKey<UserDefSettingsRecord>>asList(Keys.ROLE_SETTINGS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserDefSettingsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserDefSettingsRecord, ?>>asList(Keys.USER_DEF_SETTINGS__FK_ROLE_SETTINGS_ROLES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserDefSettings as(String alias) {
        return new UserDefSettings(alias, this);
    }

    /**
     * Rename this table
     */
    public UserDefSettings rename(String name) {
        return new UserDefSettings(name, null);
    }
}
