/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.public_.tables.pojos;


import com.nayanzin.springbootjooq.db.public_.enums.OrgType;

import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserPermissions implements Serializable {

    private static final long serialVersionUID = -748042594;

    private Integer id;
    private Integer roleId;
    private Integer permissionId;
    private OrgType organizationTypeId;

    public UserPermissions() {}

    public UserPermissions(UserPermissions value) {
        this.id = value.id;
        this.roleId = value.roleId;
        this.permissionId = value.permissionId;
        this.organizationTypeId = value.organizationTypeId;
    }

    public UserPermissions(
        Integer id,
        Integer roleId,
        Integer permissionId,
        OrgType organizationTypeId
    ) {
        this.id = id;
        this.roleId = roleId;
        this.permissionId = permissionId;
        this.organizationTypeId = organizationTypeId;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getRoleId() {
        return this.roleId;
    }

    public void setRoleId(Integer roleId) {
        this.roleId = roleId;
    }

    public Integer getPermissionId() {
        return this.permissionId;
    }

    public void setPermissionId(Integer permissionId) {
        this.permissionId = permissionId;
    }

    public OrgType getOrganizationTypeId() {
        return this.organizationTypeId;
    }

    public void setOrganizationTypeId(OrgType organizationTypeId) {
        this.organizationTypeId = organizationTypeId;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserPermissions (");

        sb.append(id);
        sb.append(", ").append(roleId);
        sb.append(", ").append(permissionId);
        sb.append(", ").append(organizationTypeId);

        sb.append(")");
        return sb.toString();
    }
}
