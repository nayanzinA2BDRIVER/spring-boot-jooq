/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.public_.tables.records;


import com.nayanzin.springbootjooq.db.public_.tables.CurrencyExchange;

import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CurrencyExchangeRecord extends UpdatableRecordImpl<CurrencyExchangeRecord> implements Record5<Long, String, String, BigDecimal, Timestamp> {

    private static final long serialVersionUID = -52225320;

    /**
     * Setter for <code>public.currency_exchange.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.currency_exchange.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.currency_exchange.code_1</code>.
     */
    public void setCode_1(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.currency_exchange.code_1</code>.
     */
    public String getCode_1() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.currency_exchange.code_2</code>.
     */
    public void setCode_2(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.currency_exchange.code_2</code>.
     */
    public String getCode_2() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.currency_exchange.rate</code>.
     */
    public void setRate(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.currency_exchange.rate</code>.
     */
    public BigDecimal getRate() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.currency_exchange.created_date</code>.
     */
    public void setCreatedDate(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.currency_exchange.created_date</code>.
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, String, BigDecimal, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, String, BigDecimal, Timestamp> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return CurrencyExchange.CURRENCY_EXCHANGE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return CurrencyExchange.CURRENCY_EXCHANGE.CODE_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return CurrencyExchange.CURRENCY_EXCHANGE.CODE_2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return CurrencyExchange.CURRENCY_EXCHANGE.RATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return CurrencyExchange.CURRENCY_EXCHANGE.CREATED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCode_1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCode_2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrencyExchangeRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrencyExchangeRecord value2(String value) {
        setCode_1(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrencyExchangeRecord value3(String value) {
        setCode_2(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrencyExchangeRecord value4(BigDecimal value) {
        setRate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrencyExchangeRecord value5(Timestamp value) {
        setCreatedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CurrencyExchangeRecord values(Long value1, String value2, String value3, BigDecimal value4, Timestamp value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CurrencyExchangeRecord
     */
    public CurrencyExchangeRecord() {
        super(CurrencyExchange.CURRENCY_EXCHANGE);
    }

    /**
     * Create a detached, initialised CurrencyExchangeRecord
     */
    public CurrencyExchangeRecord(Long id, String code_1, String code_2, BigDecimal rate, Timestamp createdDate) {
        super(CurrencyExchange.CURRENCY_EXCHANGE);

        set(0, id);
        set(1, code_1);
        set(2, code_2);
        set(3, rate);
        set(4, createdDate);
    }
}
