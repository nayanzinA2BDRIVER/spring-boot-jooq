/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.public_.tables;


import com.nayanzin.springbootjooq.db.public_.Keys;
import com.nayanzin.springbootjooq.db.public_.Public;
import com.nayanzin.springbootjooq.db.public_.enums.BidStatus;
import com.nayanzin.springbootjooq.db.public_.tables.records.BidsRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Bids extends TableImpl<BidsRecord> {

    private static final long serialVersionUID = -1466453449;

    /**
     * The reference instance of <code>public.bids</code>
     */
    public static final Bids BIDS = new Bids();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BidsRecord> getRecordType() {
        return BidsRecord.class;
    }

    /**
     * The column <code>public.bids.id</code>.
     */
    public final TableField<BidsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('bids_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.bids.bid</code>.
     */
    public final TableField<BidsRecord, BigDecimal> BID = createField("bid", org.jooq.impl.SQLDataType.NUMERIC.precision(10, 2).nullable(false), this, "");

    /**
     * The column <code>public.bids.tender_id</code>.
     */
    public final TableField<BidsRecord, Long> TENDER_ID = createField("tender_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.bids.payment_type</code>.
     */
    public final TableField<BidsRecord, Integer> PAYMENT_TYPE = createField("payment_type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.bids.payment_on</code>.
     */
    public final TableField<BidsRecord, Integer> PAYMENT_ON = createField("payment_on", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.bids.payment_days</code>.
     */
    public final TableField<BidsRecord, Integer> PAYMENT_DAYS = createField("payment_days", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.bids.description</code>.
     */
    public final TableField<BidsRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(2048), this, "");

    /**
     * The column <code>public.bids.created_date</code>.
     */
    public final TableField<BidsRecord, Timestamp> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>public.bids.modified_date</code>.
     */
    public final TableField<BidsRecord, Timestamp> MODIFIED_DATE = createField("modified_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.bids.created_user</code>.
     */
    public final TableField<BidsRecord, Long> CREATED_USER = createField("created_user", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.bids.modified_user</code>.
     */
    public final TableField<BidsRecord, String> MODIFIED_USER = createField("modified_user", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

    /**
     * The column <code>public.bids.partnership</code>.
     */
    public final TableField<BidsRecord, Short> PARTNERSHIP = createField("partnership", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("2", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>public.bids.currency_code</code>.
     */
    public final TableField<BidsRecord, String> CURRENCY_CODE = createField("currency_code", org.jooq.impl.SQLDataType.VARCHAR.length(8), this, "");

    /**
     * The column <code>public.bids.status</code>.
     */
    public final TableField<BidsRecord, BidStatus> STATUS = createField("status", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(com.nayanzin.springbootjooq.db.public_.enums.BidStatus.class), this, "");

    /**
     * The column <code>public.bids.carrier_id</code>.
     */
    public final TableField<BidsRecord, Long> CARRIER_ID = createField("carrier_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.bids.payment_guarantee</code>.
     */
    public final TableField<BidsRecord, Boolean> PAYMENT_GUARANTEE = createField("payment_guarantee", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>public.bids</code> table reference
     */
    public Bids() {
        this("bids", null);
    }

    /**
     * Create an aliased <code>public.bids</code> table reference
     */
    public Bids(String alias) {
        this(alias, BIDS);
    }

    private Bids(String alias, Table<BidsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Bids(String alias, Table<BidsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BidsRecord, Long> getIdentity() {
        return Keys.IDENTITY_BIDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BidsRecord> getPrimaryKey() {
        return Keys.BIDS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BidsRecord>> getKeys() {
        return Arrays.<UniqueKey<BidsRecord>>asList(Keys.BIDS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<BidsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BidsRecord, ?>>asList(Keys.BIDS__FK_BIDS_TENDERS, Keys.BIDS__FK_BIDS_CURRENCIES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Bids as(String alias) {
        return new Bids(alias, this);
    }

    /**
     * Rename this table
     */
    public Bids rename(String name) {
        return new Bids(name, null);
    }
}
