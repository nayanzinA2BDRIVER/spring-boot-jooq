/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.public_.tables;


import com.nayanzin.springbootjooq.db.public_.Keys;
import com.nayanzin.springbootjooq.db.public_.Public;
import com.nayanzin.springbootjooq.db.public_.tables.records.Ip2locationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ip2location extends TableImpl<Ip2locationRecord> {

    private static final long serialVersionUID = -1201486182;

    /**
     * The reference instance of <code>public.ip2location</code>
     */
    public static final Ip2location IP2LOCATION = new Ip2location();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Ip2locationRecord> getRecordType() {
        return Ip2locationRecord.class;
    }

    /**
     * The column <code>public.ip2location.ip_from</code>.
     */
    public final TableField<Ip2locationRecord, Long> IP_FROM = createField("ip_from", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.ip2location.ip_to</code>.
     */
    public final TableField<Ip2locationRecord, Long> IP_TO = createField("ip_to", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.ip2location.country_code</code>.
     */
    public final TableField<Ip2locationRecord, String> COUNTRY_CODE = createField("country_code", org.jooq.impl.SQLDataType.CHAR.length(2).nullable(false), this, "");

    /**
     * The column <code>public.ip2location.country_name</code>.
     */
    public final TableField<Ip2locationRecord, String> COUNTRY_NAME = createField("country_name", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * Create a <code>public.ip2location</code> table reference
     */
    public Ip2location() {
        this("ip2location", null);
    }

    /**
     * Create an aliased <code>public.ip2location</code> table reference
     */
    public Ip2location(String alias) {
        this(alias, IP2LOCATION);
    }

    private Ip2location(String alias, Table<Ip2locationRecord> aliased) {
        this(alias, aliased, null);
    }

    private Ip2location(String alias, Table<Ip2locationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Ip2locationRecord> getPrimaryKey() {
        return Keys.IP2LOCATION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Ip2locationRecord>> getKeys() {
        return Arrays.<UniqueKey<Ip2locationRecord>>asList(Keys.IP2LOCATION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ip2location as(String alias) {
        return new Ip2location(alias, this);
    }

    /**
     * Rename this table
     */
    public Ip2location rename(String name) {
        return new Ip2location(name, null);
    }
}
