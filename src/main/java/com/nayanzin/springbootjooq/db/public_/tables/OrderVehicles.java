/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.public_.tables;


import com.nayanzin.springbootjooq.db.public_.Keys;
import com.nayanzin.springbootjooq.db.public_.Public;
import com.nayanzin.springbootjooq.db.public_.tables.records.OrderVehiclesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderVehicles extends TableImpl<OrderVehiclesRecord> {

    private static final long serialVersionUID = -778211175;

    /**
     * The reference instance of <code>public.order_vehicles</code>
     */
    public static final OrderVehicles ORDER_VEHICLES = new OrderVehicles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrderVehiclesRecord> getRecordType() {
        return OrderVehiclesRecord.class;
    }

    /**
     * The column <code>public.order_vehicles.id</code>.
     */
    public final TableField<OrderVehiclesRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('order_vehicles_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.order_vehicles.order_id</code>.
     */
    public final TableField<OrderVehiclesRecord, Long> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.order_vehicles.vehicle_id</code>.
     */
    public final TableField<OrderVehiclesRecord, Long> VEHICLE_ID = createField("vehicle_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.order_vehicles.vehicle_type</code>.
     */
    public final TableField<OrderVehiclesRecord, Short> VEHICLE_TYPE = createField("vehicle_type", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * Create a <code>public.order_vehicles</code> table reference
     */
    public OrderVehicles() {
        this("order_vehicles", null);
    }

    /**
     * Create an aliased <code>public.order_vehicles</code> table reference
     */
    public OrderVehicles(String alias) {
        this(alias, ORDER_VEHICLES);
    }

    private OrderVehicles(String alias, Table<OrderVehiclesRecord> aliased) {
        this(alias, aliased, null);
    }

    private OrderVehicles(String alias, Table<OrderVehiclesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<OrderVehiclesRecord, Long> getIdentity() {
        return Keys.IDENTITY_ORDER_VEHICLES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrderVehiclesRecord> getPrimaryKey() {
        return Keys.ORDER_VEHICLES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrderVehiclesRecord>> getKeys() {
        return Arrays.<UniqueKey<OrderVehiclesRecord>>asList(Keys.ORDER_VEHICLES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<OrderVehiclesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<OrderVehiclesRecord, ?>>asList(Keys.ORDER_VEHICLES__FK_ORDER_VEHICLES_ORDERS, Keys.ORDER_VEHICLES__FK_ORDERS_VEHICLES_VEHICLES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderVehicles as(String alias) {
        return new OrderVehicles(alias, this);
    }

    /**
     * Rename this table
     */
    public OrderVehicles rename(String name) {
        return new OrderVehicles(name, null);
    }
}
