/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.public_.tables.records;


import com.nayanzin.springbootjooq.db.public_.enums.OrgType;
import com.nayanzin.springbootjooq.db.public_.tables.UserPermissions;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserPermissionsRecord extends UpdatableRecordImpl<UserPermissionsRecord> implements Record4<Integer, Integer, Integer, OrgType> {

    private static final long serialVersionUID = 850074611;

    /**
     * Setter for <code>public.user_permissions.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_permissions.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.user_permissions.role_id</code>.
     */
    public void setRoleId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_permissions.role_id</code>.
     */
    public Integer getRoleId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.user_permissions.permission_id</code>.
     */
    public void setPermissionId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user_permissions.permission_id</code>.
     */
    public Integer getPermissionId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.user_permissions.organization_type_id</code>.
     */
    public void setOrganizationTypeId(OrgType value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.user_permissions.organization_type_id</code>.
     */
    public OrgType getOrganizationTypeId() {
        return (OrgType) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, OrgType> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Integer, OrgType> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return UserPermissions.USER_PERMISSIONS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return UserPermissions.USER_PERMISSIONS.ROLE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return UserPermissions.USER_PERMISSIONS.PERMISSION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OrgType> field4() {
        return UserPermissions.USER_PERMISSIONS.ORGANIZATION_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getRoleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getPermissionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrgType value4() {
        return getOrganizationTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPermissionsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPermissionsRecord value2(Integer value) {
        setRoleId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPermissionsRecord value3(Integer value) {
        setPermissionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPermissionsRecord value4(OrgType value) {
        setOrganizationTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPermissionsRecord values(Integer value1, Integer value2, Integer value3, OrgType value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserPermissionsRecord
     */
    public UserPermissionsRecord() {
        super(UserPermissions.USER_PERMISSIONS);
    }

    /**
     * Create a detached, initialised UserPermissionsRecord
     */
    public UserPermissionsRecord(Integer id, Integer roleId, Integer permissionId, OrgType organizationTypeId) {
        super(UserPermissions.USER_PERMISSIONS);

        set(0, id);
        set(1, roleId);
        set(2, permissionId);
        set(3, organizationTypeId);
    }
}
