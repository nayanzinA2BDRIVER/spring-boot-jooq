/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.public_.tables;


import com.nayanzin.springbootjooq.db.public_.Keys;
import com.nayanzin.springbootjooq.db.public_.Public;
import com.nayanzin.springbootjooq.db.public_.enums.NegotiationStatus;
import com.nayanzin.springbootjooq.db.public_.tables.records.NegotiationsRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Negotiations extends TableImpl<NegotiationsRecord> {

    private static final long serialVersionUID = -1139394491;

    /**
     * The reference instance of <code>public.negotiations</code>
     */
    public static final Negotiations NEGOTIATIONS = new Negotiations();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NegotiationsRecord> getRecordType() {
        return NegotiationsRecord.class;
    }

    /**
     * The column <code>public.negotiations.id</code>.
     */
    public final TableField<NegotiationsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('negotiations_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.negotiations.user_id</code>.
     */
    public final TableField<NegotiationsRecord, Long> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.negotiations.amount</code>.
     */
    public final TableField<NegotiationsRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.NUMERIC.precision(10, 2).nullable(false), this, "");

    /**
     * The column <code>public.negotiations.currency_code</code>.
     */
    public final TableField<NegotiationsRecord, String> CURRENCY_CODE = createField("currency_code", org.jooq.impl.SQLDataType.VARCHAR.length(8).nullable(false), this, "");

    /**
     * The column <code>public.negotiations.partnership</code>.
     */
    public final TableField<NegotiationsRecord, Short> PARTNERSHIP = createField("partnership", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>public.negotiations.comment</code>.
     */
    public final TableField<NegotiationsRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.VARCHAR.length(2048), this, "");

    /**
     * The column <code>public.negotiations.timestamp</code>.
     */
    public final TableField<NegotiationsRecord, Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>public.negotiations.fee</code>.
     */
    public final TableField<NegotiationsRecord, BigDecimal> FEE = createField("fee", org.jooq.impl.SQLDataType.NUMERIC.precision(10, 2), this, "");

    /**
     * The column <code>public.negotiations.fee_code</code>.
     */
    public final TableField<NegotiationsRecord, String> FEE_CODE = createField("fee_code", org.jooq.impl.SQLDataType.VARCHAR.length(8), this, "");

    /**
     * The column <code>public.negotiations.deal_id</code>.
     */
    public final TableField<NegotiationsRecord, Long> DEAL_ID = createField("deal_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.negotiations.status</code>.
     */
    public final TableField<NegotiationsRecord, NegotiationStatus> STATUS = createField("status", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(com.nayanzin.springbootjooq.db.public_.enums.NegotiationStatus.class), this, "");

    /**
     * Create a <code>public.negotiations</code> table reference
     */
    public Negotiations() {
        this("negotiations", null);
    }

    /**
     * Create an aliased <code>public.negotiations</code> table reference
     */
    public Negotiations(String alias) {
        this(alias, NEGOTIATIONS);
    }

    private Negotiations(String alias, Table<NegotiationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Negotiations(String alias, Table<NegotiationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<NegotiationsRecord, Long> getIdentity() {
        return Keys.IDENTITY_NEGOTIATIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<NegotiationsRecord> getPrimaryKey() {
        return Keys.NEGOTIATIONS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<NegotiationsRecord>> getKeys() {
        return Arrays.<UniqueKey<NegotiationsRecord>>asList(Keys.NEGOTIATIONS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<NegotiationsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<NegotiationsRecord, ?>>asList(Keys.NEGOTIATIONS__FK_NEGOTIATIONS_USERS, Keys.NEGOTIATIONS__FK_NEGOTIATIONS_CURRENCIES, Keys.NEGOTIATIONS__FK_DEAL_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Negotiations as(String alias) {
        return new Negotiations(alias, this);
    }

    /**
     * Rename this table
     */
    public Negotiations rename(String name) {
        return new Negotiations(name, null);
    }
}
