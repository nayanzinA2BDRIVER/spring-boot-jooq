/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.public_.tables.records;


import com.nayanzin.springbootjooq.db.public_.tables.OrderWaypoints;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderWaypointsRecord extends UpdatableRecordImpl<OrderWaypointsRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 382410292;

    /**
     * Setter for <code>public.order_waypoints.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.order_waypoints.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.order_waypoints.order_id</code>.
     */
    public void setOrderId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.order_waypoints.order_id</code>.
     */
    public Long getOrderId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.order_waypoints.route_waypoint_id</code>.
     */
    public void setRouteWaypointId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.order_waypoints.route_waypoint_id</code>.
     */
    public Long getRouteWaypointId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return OrderWaypoints.ORDER_WAYPOINTS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return OrderWaypoints.ORDER_WAYPOINTS.ORDER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return OrderWaypoints.ORDER_WAYPOINTS.ROUTE_WAYPOINT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getRouteWaypointId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderWaypointsRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderWaypointsRecord value2(Long value) {
        setOrderId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderWaypointsRecord value3(Long value) {
        setRouteWaypointId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderWaypointsRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderWaypointsRecord
     */
    public OrderWaypointsRecord() {
        super(OrderWaypoints.ORDER_WAYPOINTS);
    }

    /**
     * Create a detached, initialised OrderWaypointsRecord
     */
    public OrderWaypointsRecord(Long id, Long orderId, Long routeWaypointId) {
        super(OrderWaypoints.ORDER_WAYPOINTS);

        set(0, id);
        set(1, orderId);
        set(2, routeWaypointId);
    }
}
