/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.information_schema.tables;


import com.nayanzin.springbootjooq.db.information_schema.InformationSchema;
import com.nayanzin.springbootjooq.db.information_schema.tables.records.ApplicableRolesRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApplicableRoles extends TableImpl<ApplicableRolesRecord> {

    private static final long serialVersionUID = 1345637295;

    /**
     * The reference instance of <code>information_schema.applicable_roles</code>
     */
    public static final ApplicableRoles APPLICABLE_ROLES = new ApplicableRoles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ApplicableRolesRecord> getRecordType() {
        return ApplicableRolesRecord.class;
    }

    /**
     * The column <code>information_schema.applicable_roles.grantee</code>.
     */
    public final TableField<ApplicableRolesRecord, String> GRANTEE = createField("grantee", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.applicable_roles.role_name</code>.
     */
    public final TableField<ApplicableRolesRecord, String> ROLE_NAME = createField("role_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.applicable_roles.is_grantable</code>.
     */
    public final TableField<ApplicableRolesRecord, String> IS_GRANTABLE = createField("is_grantable", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "");

    /**
     * Create a <code>information_schema.applicable_roles</code> table reference
     */
    public ApplicableRoles() {
        this("applicable_roles", null);
    }

    /**
     * Create an aliased <code>information_schema.applicable_roles</code> table reference
     */
    public ApplicableRoles(String alias) {
        this(alias, APPLICABLE_ROLES);
    }

    private ApplicableRoles(String alias, Table<ApplicableRolesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ApplicableRoles(String alias, Table<ApplicableRolesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ApplicableRoles as(String alias) {
        return new ApplicableRoles(alias, this);
    }

    /**
     * Rename this table
     */
    public ApplicableRoles rename(String name) {
        return new ApplicableRoles(name, null);
    }
}
