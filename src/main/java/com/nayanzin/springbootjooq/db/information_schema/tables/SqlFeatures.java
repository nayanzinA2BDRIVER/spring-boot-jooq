/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.information_schema.tables;


import com.nayanzin.springbootjooq.db.information_schema.InformationSchema;
import com.nayanzin.springbootjooq.db.information_schema.tables.records.SqlFeaturesRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SqlFeatures extends TableImpl<SqlFeaturesRecord> {

    private static final long serialVersionUID = -653089849;

    /**
     * The reference instance of <code>information_schema.sql_features</code>
     */
    public static final SqlFeatures SQL_FEATURES = new SqlFeatures();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SqlFeaturesRecord> getRecordType() {
        return SqlFeaturesRecord.class;
    }

    /**
     * The column <code>information_schema.sql_features.feature_id</code>.
     */
    public final TableField<SqlFeaturesRecord, String> FEATURE_ID = createField("feature_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.sql_features.feature_name</code>.
     */
    public final TableField<SqlFeaturesRecord, String> FEATURE_NAME = createField("feature_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.sql_features.sub_feature_id</code>.
     */
    public final TableField<SqlFeaturesRecord, String> SUB_FEATURE_ID = createField("sub_feature_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.sql_features.sub_feature_name</code>.
     */
    public final TableField<SqlFeaturesRecord, String> SUB_FEATURE_NAME = createField("sub_feature_name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.sql_features.is_supported</code>.
     */
    public final TableField<SqlFeaturesRecord, String> IS_SUPPORTED = createField("is_supported", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "");

    /**
     * The column <code>information_schema.sql_features.is_verified_by</code>.
     */
    public final TableField<SqlFeaturesRecord, String> IS_VERIFIED_BY = createField("is_verified_by", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>information_schema.sql_features.comments</code>.
     */
    public final TableField<SqlFeaturesRecord, String> COMMENTS = createField("comments", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>information_schema.sql_features</code> table reference
     */
    public SqlFeatures() {
        this("sql_features", null);
    }

    /**
     * Create an aliased <code>information_schema.sql_features</code> table reference
     */
    public SqlFeatures(String alias) {
        this(alias, SQL_FEATURES);
    }

    private SqlFeatures(String alias, Table<SqlFeaturesRecord> aliased) {
        this(alias, aliased, null);
    }

    private SqlFeatures(String alias, Table<SqlFeaturesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SqlFeatures as(String alias) {
        return new SqlFeatures(alias, this);
    }

    /**
     * Rename this table
     */
    public SqlFeatures rename(String name) {
        return new SqlFeatures(name, null);
    }
}
