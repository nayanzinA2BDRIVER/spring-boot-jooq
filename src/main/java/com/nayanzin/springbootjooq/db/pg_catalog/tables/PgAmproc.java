/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.pg_catalog.tables;


import com.nayanzin.springbootjooq.db.pg_catalog.PgCatalog;
import com.nayanzin.springbootjooq.db.pg_catalog.tables.records.PgAmprocRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgAmproc extends TableImpl<PgAmprocRecord> {

    private static final long serialVersionUID = -2133767968;

    /**
     * The reference instance of <code>pg_catalog.pg_amproc</code>
     */
    public static final PgAmproc PG_AMPROC = new PgAmproc();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PgAmprocRecord> getRecordType() {
        return PgAmprocRecord.class;
    }

    /**
     * The column <code>pg_catalog.pg_amproc.amprocfamily</code>.
     */
    public final TableField<PgAmprocRecord, Long> AMPROCFAMILY = createField("amprocfamily", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_amproc.amproclefttype</code>.
     */
    public final TableField<PgAmprocRecord, Long> AMPROCLEFTTYPE = createField("amproclefttype", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_amproc.amprocrighttype</code>.
     */
    public final TableField<PgAmprocRecord, Long> AMPROCRIGHTTYPE = createField("amprocrighttype", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_amproc.amprocnum</code>.
     */
    public final TableField<PgAmprocRecord, Short> AMPROCNUM = createField("amprocnum", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_amproc.amproc</code>.
     */
    public final TableField<PgAmprocRecord, String> AMPROC = createField("amproc", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * Create a <code>pg_catalog.pg_amproc</code> table reference
     */
    public PgAmproc() {
        this("pg_amproc", null);
    }

    /**
     * Create an aliased <code>pg_catalog.pg_amproc</code> table reference
     */
    public PgAmproc(String alias) {
        this(alias, PG_AMPROC);
    }

    private PgAmproc(String alias, Table<PgAmprocRecord> aliased) {
        this(alias, aliased, null);
    }

    private PgAmproc(String alias, Table<PgAmprocRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PgCatalog.PG_CATALOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgAmproc as(String alias) {
        return new PgAmproc(alias, this);
    }

    /**
     * Rename this table
     */
    public PgAmproc rename(String name) {
        return new PgAmproc(name, null);
    }
}
