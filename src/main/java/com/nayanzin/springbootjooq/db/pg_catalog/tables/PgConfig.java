/**
 * This class is generated by jOOQ
 */
package com.nayanzin.springbootjooq.db.pg_catalog.tables;


import com.nayanzin.springbootjooq.db.pg_catalog.PgCatalog;
import com.nayanzin.springbootjooq.db.pg_catalog.tables.records.PgConfigRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgConfig extends TableImpl<PgConfigRecord> {

    private static final long serialVersionUID = -1312928244;

    /**
     * The reference instance of <code>pg_catalog.pg_config</code>
     */
    public static final PgConfig PG_CONFIG = new PgConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PgConfigRecord> getRecordType() {
        return PgConfigRecord.class;
    }

    /**
     * The column <code>pg_catalog.pg_config.name</code>.
     */
    public final TableField<PgConfigRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>pg_catalog.pg_config.setting</code>.
     */
    public final TableField<PgConfigRecord, String> SETTING = createField("setting", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>pg_catalog.pg_config</code> table reference
     */
    public PgConfig() {
        this("pg_config", null);
    }

    /**
     * Create an aliased <code>pg_catalog.pg_config</code> table reference
     */
    public PgConfig(String alias) {
        this(alias, PG_CONFIG);
    }

    private PgConfig(String alias, Table<PgConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private PgConfig(String alias, Table<PgConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PgCatalog.PG_CATALOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PgConfig as(String alias) {
        return new PgConfig(alias, this);
    }

    /**
     * Rename this table
     */
    public PgConfig rename(String name) {
        return new PgConfig(name, null);
    }
}
